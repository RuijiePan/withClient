<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="auto.newsky.coding.mapper.ConcernMapper" >
  <resultMap id="BaseResultMap" type="auto.newsky.coding.po.Concern" >
    <result column="con_from_user_id" property="conFromUserId" jdbcType="INTEGER" />
    <result column="con_to_user_id" property="conToUserId" jdbcType="INTEGER" />
    <result column="con_is_concern" property="conIsConcern" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    con_from_user_id, con_to_user_id, con_is_concern
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="auto.newsky.coding.po.ConcernExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from with_concern
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="auto.newsky.coding.po.ConcernExample" >
    delete from with_concern
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="auto.newsky.coding.po.Concern" >
    insert into with_concern (con_from_user_id, con_to_user_id, con_is_concern
      )
    values (#{conFromUserId,jdbcType=INTEGER}, #{conToUserId,jdbcType=INTEGER}, #{conIsConcern,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="auto.newsky.coding.po.Concern" >
    insert into with_concern
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="conFromUserId != null" >
        con_from_user_id,
      </if>
      <if test="conToUserId != null" >
        con_to_user_id,
      </if>
      <if test="conIsConcern != null" >
        con_is_concern,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="conFromUserId != null" >
        #{conFromUserId,jdbcType=INTEGER},
      </if>
      <if test="conToUserId != null" >
        #{conToUserId,jdbcType=INTEGER},
      </if>
      <if test="conIsConcern != null" >
        #{conIsConcern,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="auto.newsky.coding.po.ConcernExample" resultType="java.lang.Integer" >
    select count(*) from with_concern
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update with_concern
    <set >
      <if test="record.conFromUserId != null" >
        con_from_user_id = #{record.conFromUserId,jdbcType=INTEGER},
      </if>
      <if test="record.conToUserId != null" >
        con_to_user_id = #{record.conToUserId,jdbcType=INTEGER},
      </if>
      <if test="record.conIsConcern != null" >
        con_is_concern = #{record.conIsConcern,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update with_concern
    set con_from_user_id = #{record.conFromUserId,jdbcType=INTEGER},
      con_to_user_id = #{record.conToUserId,jdbcType=INTEGER},
      con_is_concern = #{record.conIsConcern,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>