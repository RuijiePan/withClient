<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="auto.newsky.coding.mapper.VersionMapper" >
  <resultMap id="BaseResultMap" type="auto.newsky.coding.po.Version" >
    <id column="version_id" property="versionId" jdbcType="INTEGER" />
    <result column="version_code" property="versionCode" jdbcType="INTEGER" />
    <result column="version_name" property="versionName" jdbcType="DOUBLE" />
    <result column="version_content" property="versionContent" jdbcType="VARCHAR" />
    <result column="version_force_update" property="versionForceUpdate" jdbcType="INTEGER" />
    <result column="version_url" property="versionUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    version_id, version_code, version_name, version_content, version_force_update, version_url
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="auto.newsky.coding.po.VersionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from with_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from with_version
    where version_id = #{versionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from with_version
    where version_id = #{versionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="auto.newsky.coding.po.VersionExample" >
    delete from with_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="auto.newsky.coding.po.Version" >
    insert into with_version (version_id, version_code, version_name, 
      version_content, version_force_update, version_url
      )
    values (#{versionId,jdbcType=INTEGER}, #{versionCode,jdbcType=INTEGER}, #{versionName,jdbcType=DOUBLE}, 
      #{versionContent,jdbcType=VARCHAR}, #{versionForceUpdate,jdbcType=INTEGER}, #{versionUrl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="auto.newsky.coding.po.Version" >
    insert into with_version
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="versionId != null" >
        version_id,
      </if>
      <if test="versionCode != null" >
        version_code,
      </if>
      <if test="versionName != null" >
        version_name,
      </if>
      <if test="versionContent != null" >
        version_content,
      </if>
      <if test="versionForceUpdate != null" >
        version_force_update,
      </if>
      <if test="versionUrl != null" >
        version_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="versionId != null" >
        #{versionId,jdbcType=INTEGER},
      </if>
      <if test="versionCode != null" >
        #{versionCode,jdbcType=INTEGER},
      </if>
      <if test="versionName != null" >
        #{versionName,jdbcType=DOUBLE},
      </if>
      <if test="versionContent != null" >
        #{versionContent,jdbcType=VARCHAR},
      </if>
      <if test="versionForceUpdate != null" >
        #{versionForceUpdate,jdbcType=INTEGER},
      </if>
      <if test="versionUrl != null" >
        #{versionUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="auto.newsky.coding.po.VersionExample" resultType="java.lang.Integer" >
    select count(*) from with_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update with_version
    <set >
      <if test="record.versionId != null" >
        version_id = #{record.versionId,jdbcType=INTEGER},
      </if>
      <if test="record.versionCode != null" >
        version_code = #{record.versionCode,jdbcType=INTEGER},
      </if>
      <if test="record.versionName != null" >
        version_name = #{record.versionName,jdbcType=DOUBLE},
      </if>
      <if test="record.versionContent != null" >
        version_content = #{record.versionContent,jdbcType=VARCHAR},
      </if>
      <if test="record.versionForceUpdate != null" >
        version_force_update = #{record.versionForceUpdate,jdbcType=INTEGER},
      </if>
      <if test="record.versionUrl != null" >
        version_url = #{record.versionUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update with_version
    set version_id = #{record.versionId,jdbcType=INTEGER},
      version_code = #{record.versionCode,jdbcType=INTEGER},
      version_name = #{record.versionName,jdbcType=DOUBLE},
      version_content = #{record.versionContent,jdbcType=VARCHAR},
      version_force_update = #{record.versionForceUpdate,jdbcType=INTEGER},
      version_url = #{record.versionUrl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="auto.newsky.coding.po.Version" >
    update with_version
    <set >
      <if test="versionCode != null" >
        version_code = #{versionCode,jdbcType=INTEGER},
      </if>
      <if test="versionName != null" >
        version_name = #{versionName,jdbcType=DOUBLE},
      </if>
      <if test="versionContent != null" >
        version_content = #{versionContent,jdbcType=VARCHAR},
      </if>
      <if test="versionForceUpdate != null" >
        version_force_update = #{versionForceUpdate,jdbcType=INTEGER},
      </if>
      <if test="versionUrl != null" >
        version_url = #{versionUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where version_id = #{versionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="auto.newsky.coding.po.Version" >
    update with_version
    set version_code = #{versionCode,jdbcType=INTEGER},
      version_name = #{versionName,jdbcType=DOUBLE},
      version_content = #{versionContent,jdbcType=VARCHAR},
      version_force_update = #{versionForceUpdate,jdbcType=INTEGER},
      version_url = #{versionUrl,jdbcType=VARCHAR}
    where version_id = #{versionId,jdbcType=INTEGER}
  </update>
</mapper>