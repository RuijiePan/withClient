<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="auto.newsky.coding.mapper.MessageMapper" >
  <resultMap id="BaseResultMap" type="auto.newsky.coding.po.Message" >
    <id column="msg_id" property="msgId" jdbcType="INTEGER" />
    <result column="from_user_id" property="fromUserId" jdbcType="INTEGER" />
    <result column="to_user_id" property="toUserId" jdbcType="INTEGER" />
    <result column="invit_id" property="invitId" jdbcType="INTEGER" />
    <result column="msg_type" property="msgType" jdbcType="INTEGER" />
    <result column="msg_send_time" property="msgSendTime" jdbcType="TIMESTAMP" />
    <result column="msg_content" property="msgContent" jdbcType="VARCHAR" />
    <result column="msg_is_read" property="msgIsRead" jdbcType="BIT" />
    <result column="msg_is_delete" property="msgIsDelete" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    msg_id, from_user_id, to_user_id, invit_id, msg_type, msg_send_time, msg_content, 
    msg_is_read, msg_is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="auto.newsky.coding.po.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from with_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from with_message
    where msg_id = #{msgId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from with_message
    where msg_id = #{msgId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="auto.newsky.coding.po.MessageExample" >
    delete from with_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="auto.newsky.coding.po.Message" >
    insert into with_message (msg_id, from_user_id, to_user_id, 
      invit_id, msg_type, msg_send_time, 
      msg_content, msg_is_read, msg_is_delete
      )
    values (#{msgId,jdbcType=INTEGER}, #{fromUserId,jdbcType=INTEGER}, #{toUserId,jdbcType=INTEGER}, 
      #{invitId,jdbcType=INTEGER}, #{msgType,jdbcType=INTEGER}, #{msgSendTime,jdbcType=TIMESTAMP}, 
      #{msgContent,jdbcType=VARCHAR}, #{msgIsRead,jdbcType=BIT}, #{msgIsDelete,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="auto.newsky.coding.po.Message" >
    insert into with_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="fromUserId != null" >
        from_user_id,
      </if>
      <if test="toUserId != null" >
        to_user_id,
      </if>
      <if test="invitId != null" >
        invit_id,
      </if>
      <if test="msgType != null" >
        msg_type,
      </if>
      <if test="msgSendTime != null" >
        msg_send_time,
      </if>
      <if test="msgContent != null" >
        msg_content,
      </if>
      <if test="msgIsRead != null" >
        msg_is_read,
      </if>
      <if test="msgIsDelete != null" >
        msg_is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        #{msgId,jdbcType=INTEGER},
      </if>
      <if test="fromUserId != null" >
        #{fromUserId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null" >
        #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="invitId != null" >
        #{invitId,jdbcType=INTEGER},
      </if>
      <if test="msgType != null" >
        #{msgType,jdbcType=INTEGER},
      </if>
      <if test="msgSendTime != null" >
        #{msgSendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="msgContent != null" >
        #{msgContent,jdbcType=VARCHAR},
      </if>
      <if test="msgIsRead != null" >
        #{msgIsRead,jdbcType=BIT},
      </if>
      <if test="msgIsDelete != null" >
        #{msgIsDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="auto.newsky.coding.po.MessageExample" resultType="java.lang.Integer" >
    select count(*) from with_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update with_message
    <set >
      <if test="record.msgId != null" >
        msg_id = #{record.msgId,jdbcType=INTEGER},
      </if>
      <if test="record.fromUserId != null" >
        from_user_id = #{record.fromUserId,jdbcType=INTEGER},
      </if>
      <if test="record.toUserId != null" >
        to_user_id = #{record.toUserId,jdbcType=INTEGER},
      </if>
      <if test="record.invitId != null" >
        invit_id = #{record.invitId,jdbcType=INTEGER},
      </if>
      <if test="record.msgType != null" >
        msg_type = #{record.msgType,jdbcType=INTEGER},
      </if>
      <if test="record.msgSendTime != null" >
        msg_send_time = #{record.msgSendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.msgContent != null" >
        msg_content = #{record.msgContent,jdbcType=VARCHAR},
      </if>
      <if test="record.msgIsRead != null" >
        msg_is_read = #{record.msgIsRead,jdbcType=BIT},
      </if>
      <if test="record.msgIsDelete != null" >
        msg_is_delete = #{record.msgIsDelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update with_message
    set msg_id = #{record.msgId,jdbcType=INTEGER},
      from_user_id = #{record.fromUserId,jdbcType=INTEGER},
      to_user_id = #{record.toUserId,jdbcType=INTEGER},
      invit_id = #{record.invitId,jdbcType=INTEGER},
      msg_type = #{record.msgType,jdbcType=INTEGER},
      msg_send_time = #{record.msgSendTime,jdbcType=TIMESTAMP},
      msg_content = #{record.msgContent,jdbcType=VARCHAR},
      msg_is_read = #{record.msgIsRead,jdbcType=BIT},
      msg_is_delete = #{record.msgIsDelete,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="auto.newsky.coding.po.Message" >
    update with_message
    <set >
      <if test="fromUserId != null" >
        from_user_id = #{fromUserId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null" >
        to_user_id = #{toUserId,jdbcType=INTEGER},
      </if>
      <if test="invitId != null" >
        invit_id = #{invitId,jdbcType=INTEGER},
      </if>
      <if test="msgType != null" >
        msg_type = #{msgType,jdbcType=INTEGER},
      </if>
      <if test="msgSendTime != null" >
        msg_send_time = #{msgSendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="msgContent != null" >
        msg_content = #{msgContent,jdbcType=VARCHAR},
      </if>
      <if test="msgIsRead != null" >
        msg_is_read = #{msgIsRead,jdbcType=BIT},
      </if>
      <if test="msgIsDelete != null" >
        msg_is_delete = #{msgIsDelete,jdbcType=BIT},
      </if>
    </set>
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="auto.newsky.coding.po.Message" >
    update with_message
    set from_user_id = #{fromUserId,jdbcType=INTEGER},
      to_user_id = #{toUserId,jdbcType=INTEGER},
      invit_id = #{invitId,jdbcType=INTEGER},
      msg_type = #{msgType,jdbcType=INTEGER},
      msg_send_time = #{msgSendTime,jdbcType=TIMESTAMP},
      msg_content = #{msgContent,jdbcType=VARCHAR},
      msg_is_read = #{msgIsRead,jdbcType=BIT},
      msg_is_delete = #{msgIsDelete,jdbcType=BIT}
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>


</mapper>